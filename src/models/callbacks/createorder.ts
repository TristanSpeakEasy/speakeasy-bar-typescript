/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateOrderOrderUpdateRequest = {
  /**
   * An order for a drink or ingredient.
   */
  order?: models.OrderInput | undefined;
};

/** @internal */
export const CreateOrderOrderUpdateRequest$inboundSchema: z.ZodType<
  CreateOrderOrderUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  order: models.OrderInput$inboundSchema.optional(),
});

/** @internal */
export type CreateOrderOrderUpdateRequest$Outbound = {
  order?: models.OrderInput$Outbound | undefined;
};

/** @internal */
export const CreateOrderOrderUpdateRequest$outboundSchema: z.ZodType<
  CreateOrderOrderUpdateRequest$Outbound,
  z.ZodTypeDef,
  CreateOrderOrderUpdateRequest
> = z.object({
  order: models.OrderInput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrderOrderUpdateRequest$ {
  /** @deprecated use `CreateOrderOrderUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = CreateOrderOrderUpdateRequest$inboundSchema;
  /** @deprecated use `CreateOrderOrderUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = CreateOrderOrderUpdateRequest$outboundSchema;
  /** @deprecated use `CreateOrderOrderUpdateRequest$Outbound` instead. */
  export type Outbound = CreateOrderOrderUpdateRequest$Outbound;
}

export function createOrderOrderUpdateRequestToJSON(
  createOrderOrderUpdateRequest: CreateOrderOrderUpdateRequest,
): string {
  return JSON.stringify(
    CreateOrderOrderUpdateRequest$outboundSchema.parse(
      createOrderOrderUpdateRequest,
    ),
  );
}

export function createOrderOrderUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateOrderOrderUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOrderOrderUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOrderOrderUpdateRequest' from JSON`,
  );
}
