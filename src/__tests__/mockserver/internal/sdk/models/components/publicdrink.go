// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// PublicDrinkDataLevel - The level of data included in the response.
type PublicDrinkDataLevel string

const (
	PublicDrinkDataLevelUnauthenticated PublicDrinkDataLevel = "unauthenticated"
)

func (e PublicDrinkDataLevel) ToPointer() *PublicDrinkDataLevel {
	return &e
}
func (e *PublicDrinkDataLevel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unauthenticated":
		*e = PublicDrinkDataLevel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublicDrinkDataLevel: %v", v)
	}
}

type PublicDrink struct {
	// The name of the drink.
	Name string `json:"name"`
	// The type of drink.
	Type *DrinkType `json:"type,omitempty"`
	// The price of one unit of the drink in US cents.
	Price float64 `json:"price"`
	// A photo of the drink.
	Photo *string `json:"photo,omitempty"`
	// The level of data included in the response.
	DataLevel *PublicDrinkDataLevel `json:"dataLevel,omitempty"`
}

func (o *PublicDrink) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PublicDrink) GetType() *DrinkType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *PublicDrink) GetPrice() float64 {
	if o == nil {
		return 0.0
	}
	return o.Price
}

func (o *PublicDrink) GetPhoto() *string {
	if o == nil {
		return nil
	}
	return o.Photo
}

func (o *PublicDrink) GetDataLevel() *PublicDrinkDataLevel {
	if o == nil {
		return nil
	}
	return o.DataLevel
}
