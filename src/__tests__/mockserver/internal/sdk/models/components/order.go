// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// OrderOrderType - The type of order.
type OrderOrderType string

const (
	OrderOrderTypeDrink      OrderOrderType = "drink"
	OrderOrderTypeIngredient OrderOrderType = "ingredient"
)

func (e OrderOrderType) ToPointer() *OrderOrderType {
	return &e
}
func (e *OrderOrderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "drink":
		fallthrough
	case "ingredient":
		*e = OrderOrderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderOrderType: %v", v)
	}
}

// OrderStatus - The status of the order.
type OrderStatus string

const (
	OrderStatusPending    OrderStatus = "pending"
	OrderStatusProcessing OrderStatus = "processing"
	OrderStatusComplete   OrderStatus = "complete"
)

func (e OrderStatus) ToPointer() *OrderStatus {
	return &e
}
func (e *OrderStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "processing":
		fallthrough
	case "complete":
		*e = OrderStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderStatus: %v", v)
	}
}

// Order - An order for a drink or ingredient.
type Order struct {
	// The type of order.
	OrderType OrderOrderType
	// The product code of the drink or ingredient.
	ProductCode string
	// The number of units of the drink or ingredient to order.
	Quantity int64
	// The status of the order.
	Status OrderStatus
}

func (o *Order) GetOrderType() OrderOrderType {
	if o == nil {
		return OrderOrderType("")
	}
	return o.OrderType
}

func (o *Order) GetProductCode() string {
	if o == nil {
		return ""
	}
	return o.ProductCode
}

func (o *Order) GetQuantity() int64 {
	if o == nil {
		return 0
	}
	return o.Quantity
}

func (o *Order) GetStatus() OrderStatus {
	if o == nil {
		return OrderStatus("")
	}
	return o.Status
}

// OrderInput - An order for a drink or ingredient.
type OrderInput struct {
	// The type of order.
	OrderType OrderOrderType `json:"orderType"`
	// The product code of the drink or ingredient.
	ProductCode string `json:"productCode"`
	// The number of units of the drink or ingredient to order.
	Quantity int64 `json:"quantity"`
}

func (o *OrderInput) GetOrderType() OrderOrderType {
	if o == nil {
		return OrderOrderType("")
	}
	return o.OrderType
}

func (o *OrderInput) GetProductCode() string {
	if o == nil {
		return ""
	}
	return o.ProductCode
}

func (o *OrderInput) GetQuantity() int64 {
	if o == nil {
		return 0
	}
	return o.Quantity
}
