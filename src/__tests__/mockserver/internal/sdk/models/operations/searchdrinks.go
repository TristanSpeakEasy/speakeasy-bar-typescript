// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type SearchDrinksSecurity struct {
	APIKey *string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *SearchDrinksSecurity) GetAPIKey() *string {
	if o == nil {
		return nil
	}
	return o.APIKey
}

type SearchDrinksRequest struct {
	// The search query.
	Query string `queryParam:"style=form,explode=true,name=query"`
	// The type of drink to filter by. If not provided all drinks will be returned.
	Type *components.DrinkType `queryParam:"style=form,explode=true,name=type"`
}

func (o *SearchDrinksRequest) GetQuery() string {
	if o == nil {
		return ""
	}
	return o.Query
}

func (o *SearchDrinksRequest) GetType() *components.DrinkType {
	if o == nil {
		return nil
	}
	return o.Type
}

type SearchDrinksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of drinks.
	Drinks []components.Drink
	// An unknown error occurred interacting with the API.
	Error *components.Error
}

func (o *SearchDrinksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SearchDrinksResponse) GetDrinks() []components.Drink {
	if o == nil {
		return nil
	}
	return o.Drinks
}

func (o *SearchDrinksResponse) GetError() *components.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
