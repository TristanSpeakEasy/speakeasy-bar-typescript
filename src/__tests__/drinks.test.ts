/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SpeakeasyBar } from "../index.js";
import { Drink } from "../models/index.js";
import { ResponseBody } from "../models/operations/index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Drinks List Drinks Unauthenticated Drinks", async () => {
  const testHttpClient = createTestHTTPClient(
    "listDrinks-unauthenticated_drinks",
  );

  const speakeasyBar = new SpeakeasyBar({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await speakeasyBar.drinks.get();
  expect(result).toBeDefined();
  expect(result as ResponseBody[]).toEqual([
    {
      name: "Old Fashioned",
      type: "cocktail",
      price: 1000,
      photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
      dataLevel: "unauthenticated",
    },
    {
      name: "Manhattan",
      type: "cocktail",
      price: 1200,
      photo: "https://speakeasy.bar/drinks/manhattan.jpg",
      dataLevel: "unauthenticated",
    },
    {
      name: "Negroni",
      type: "cocktail",
      price: 1500,
      photo: "https://speakeasy.bar/drinks/negroni.jpg",
      dataLevel: "unauthenticated",
    },
  ]);
});

test("Drinks List Drinks Authenticated Drinks", async () => {
  const testHttpClient = createTestHTTPClient(
    "listDrinks-authenticated_drinks",
  );

  const speakeasyBar = new SpeakeasyBar({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await speakeasyBar.drinks.get();
  expect(result).toBeDefined();
  expect(result as ResponseBody[]).toEqual([
    {
      name: "Old Fashioned",
      type: "cocktail",
      price: 1000,
      photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
      dataLevel: "authenticated",
      stock: 100,
      productCode: "AC-A2DF3",
    },
    {
      name: "Manhattan",
      type: "cocktail",
      price: 1200,
      photo: "https://speakeasy.bar/drinks/manhattan.jpg",
      dataLevel: "authenticated",
      stock: 50,
      productCode: "AC-A2DF4",
    },
    {
      name: "Negroni",
      type: "cocktail",
      price: 1500,
      photo: "https://speakeasy.bar/drinks/negroni.jpg",
      dataLevel: "authenticated",
      stock: 0,
      productCode: "AC-A2DF5",
    },
  ]);
});

test("Drinks Get Drink", async () => {
  const testHttpClient = createTestHTTPClient("getDrink");

  const speakeasyBar = new SpeakeasyBar({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["SPEAKEASYBAR_API_KEY"] ?? "value",
  });

  const result = await speakeasyBar.drinks.getById({
    productCode: "AC-A2DF3",
  });
  expect(result).toBeDefined();
  expect(result.result).toBeDefined();
  expect(result.result as Drink).toEqual({
    name: "Old Fashioned",
    price: 1000,
    photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
    productCode: "AC-A2DF3",
    ingredients: [
      {
        ingredientProductCode: "AC-A2DF3",
        quantity: 253504,
      },
    ],
  });
});

test("Drinks Update Drink Old Fashioned", async () => {
  const testHttpClient = createTestHTTPClient("updateDrink-old_fashioned");

  const speakeasyBar = new SpeakeasyBar({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["SPEAKEASYBAR_API_KEY"] ?? "value",
  });

  const result = await speakeasyBar.drinks.update({
    productCode: "AC-A2DF3",
    drink: {
      name: "Old Fashioned",
      type: "cocktail",
      price: 1000,
      photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
      productCode: "AC-A2DF3",
    },
  });
  expect(result).toBeDefined();
  expect(result as Drink).toEqual({
    name: "Old Fashioned",
    type: "cocktail",
    price: 1000,
    photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
    productCode: "AC-A2DF3",
  });
});

test("Drinks Search Drinks Old Fashioned", async () => {
  const testHttpClient = createTestHTTPClient("searchDrinks-old_fashioned");

  const speakeasyBar = new SpeakeasyBar({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await speakeasyBar.drinks.search({
    query: "Old Fashioned",
  });
  expect(result).toBeDefined();
  expect(result as Drink[]).toEqual([
    {
      name: "Old Fashioned",
      price: 1000,
      photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
      productCode: "AC-A2DF3",
      ingredients: [
        {
          ingredientProductCode: "AC-A2DF3",
          quantity: 504946,
        },
      ],
    },
  ]);
});

test("Drinks Search Drinks Manhattan", async () => {
  const testHttpClient = createTestHTTPClient("searchDrinks-manhattan");

  const speakeasyBar = new SpeakeasyBar({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
  });

  const result = await speakeasyBar.drinks.search({
    query: "Manhattan",
  });
  expect(result).toBeDefined();
  expect(result as Drink[]).toEqual([
    {
      name: "Old Fashioned",
      price: 1000,
      photo: "https://speakeasy.bar/drinks/old_fashioned.jpg",
      productCode: "AC-A2DF3",
      ingredients: [
        {
          ingredientProductCode: "AC-A2DF3",
          quantity: 504946,
        },
      ],
    },
  ]);
});
